FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1.0e-3;

x0 -55.0;
x1 -10.0;
x2   0.0;
x3  40.0;
x4 100.0;
x5 140.0;

y0  60.0;
y1   5.0;
y2   0.0;
y3  -5.0;
y4 -60.0;

z0   0.5;
z1  -0.5;

vertices
(
    ($x0  $y0  $z0)         // 0
    ($x2  $y0  $z0)         // 1
    ($x4  $y0  $z0)         // 2
    ($x5  $y0  $z0)         // 3
    ($x1  $y1  $z0)         // 4
    ($x2  $y1  $z0)         // 5
    ($x3  $y1  $z0)         // 6
    ($x2  0.0  $z0)         // 7
    ($x3  0.0  $z0)         // 8
    ($x4  0.0  $z0)         // 9
    ($x5  0.0  $z0)         // 10
    ($x1  $y3  $z0)         // 11
    ($x2  $y3  $z0)         // 12
    ($x3  $y3  $z0)         // 13
    ($x0  $y4  $z0)         // 14
    ($x2  $y4  $z0)         // 15
    ($x4  $y4  $z0)         // 16
    ($x5  $y4  $z0)         // 17
    (0.0  0.0  0.0)         // 18
    (0.0  0.0  0.0)         // 19

    ($x0  $y0  $z1)         // 20
    ($x2  $y0  $z1)         // 21
    ($x4  $y0  $z1)         // 22
    ($x5  $y0  $z1)         // 23
    ($x1  $y1  $z1)         // 24
    ($x2  $y1  $z1)         // 25
    ($x3  $y1  $z1)         // 26
    ($x2  0.0  $z1)         // 27
    ($x3  0.0  $z1)         // 28
    ($x4  0.0  $z1)         // 29
    ($x5  0.0  $z1)         // 30
    ($x1  $y3  $z1)         // 31
    ($x2  $y3  $z1)         // 32
    ($x3  $y3  $z1)         // 33
    ($x0  $y4  $z1)         // 34
    ($x2  $y4  $z1)         // 35
    ($x4  $y4  $z1)         // 36
    ($x5  $y4  $z1)         // 37

);

// Number of mesh-dividing
t1 18;
r1 36;
h1 13;       
v1 40;
v2 10;
d0  1;


// Mesh-Size control
s11  0.1;//0.2;// for $r1
s21  1.5;// for block 4 7
s31  2.0;// for block 1 2 5 10
s32  0.5;// for $s31

blocks
(
// 0
    hex (   0   1   5   4   20  21  25  24  )
    ($t1 $r1 $d0 )
    simpleGrading (1 $s11  1)
// 1
    hex (   1   2   6   5   21  22  26  25  )
    ($v1 $r1 $d0)
    simpleGrading ($s31 $s11  1)
// 2
    hex (   5   6   8   7   25  26  28  27  )
    ($v1 $h1 $d0)
    simpleGrading ($s31  1  1)
// 3
    hex (   2   9   8   6   22  29  28  26  )
    ($h1 $r1 $d0)
    simpleGrading (1  $s11  1)
// 4
    hex (   2   3  10   9   22  23  30  29  )
    ($v2 $h1 $d0 )
    simpleGrading ($s21 1 1)
// 5
    hex (   7   8  13  12   27  28  33  32  )
    ($v1 $h1 $d0)
    simpleGrading ($s31 1 1)
// 6
    hex (   9  16  13   8   29  36  33  28  )
    ($h1 $r1 $d0)
    simpleGrading (1 $s11 1)
// 7
    hex (   9  10  17  16   29  30  37  36  )
    ($v2 $h1 $d0 )
    simpleGrading ($s21 1 1)
// 8
    hex (   0   4  11  14   20  24  31  34  )
    ($r1  $t1 $d0 )
    simpleGrading ($s11 1 1)
// 9
    hex (  15  14  11  12   35  34  31  32  )
    ($t1 $r1 $d0 )
    simpleGrading (1 $s11 1)
// 10
    hex (  16  15  12  13   36  35  32  33  )
    ($v1  $r1 $d0)
    simpleGrading ($s32 $s11 1)
        
);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (  0  14   34  20  )
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (   3  10   30  23  )
            (  10  17   37  30  )
        );
    }
    
    walls
    {
        type wall;
        faces
        (
            (   4   5   25  24  )
            (   5   7   27  25  )
            (   7  12   32  27  )
            (  12  11   31  32  )
            (  11   4   24  31  )
        );
    }
    
    
//    flap
//    {
//        type wall;
//        faces
//        (
//            (   7   8   28  27  )
//        );
//    }

    upperWall
    {
        type wall;
        faces
        (
            (   0   1   21  20  )
            (   1   2   22  21  )
            (   2   3   23  22  )
        );
    }
    lowerWall
    {
        type wall;
        faces
        (
            (  14  15   35  34  )
            (  15  16   36  35  )
            (  16  17   37  36  )
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            (   0   1   5   4   )
            (   1   2   6   5   )
            (   5   6   8   7   )
            (   2   9   8   6   )
            (   2   3  10   9   )
            (   7   8  13  12   )
            (   9  16  13   8   )
            (   9  10  17  16   )
            (   0   4  11  14   ) 
            (  15  14  11  12   )
            (  16  15  12  13   )


            (  20  21  25  24   )
            (  21  22  26  25   )
            (  25  26  28  27   )
            (  22  29  28  26   )
            (  22  23  30  29   )
            (  27  28  33  32   )
            (  29  36  33  28   )
            (  29  30  37  36   )
            (  20  24  31  34   )
            (  35  34  31  32   )
            (  36  35  32  33   )

        );
    }
);

// ************************************************************************* //
